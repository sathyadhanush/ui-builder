{"ast":null,"code":"var _jsxFileName = \"/home/orkaapps/trello-app/src/DragAndDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"; // fake data generator\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nfunction QuoteApp() {\n  _s();\n\n  const [state, setState] = useState([getItems(10), getItems(5, 10)]);\n\n  function onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setState([...state, []]);\n      },\n      children: \"Add new group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setState([...state, getItems(1)]);\n      },\n      children: \"Add new item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: state.map((el, ind) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${ind}`,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            ...provided.droppableProps,\n            children: [el.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-around\"\n                  },\n                  children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => {\n                      const newState = [...state];\n                      newState[ind].splice(index, 1);\n                      setState(newState.filter(group => group.length));\n                    },\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuoteApp, \"q1BLPtfl0KU06u/rzATV+yMKpwQ=\");\n\n_c = QuoteApp;\nexport default QuoteApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteApp\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","splice","index","result","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","QuoteApp","state","setState","getItems","onDragEnd","sInd","dInd","items","reorder","newState","filter","group","length","display","map","el","ind","provided","snapshot","innerRef","droppableProps","item","id","draggableProps","dragHandleProps","style","justifyContent","content","placeholder"],"sources":["/home/orkaapps/trello-app/src/DragAndDrop.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nfunction QuoteApp() {\n  const [state, setState] = useState([getItems(10), getItems(5, 10)]);\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setState([...state, []]);\n        }}\n      >\n        Add new group\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setState([...state, getItems(1)]);\n        }}\n      >\n        Add new item\n      </button>\n      <div style={{ display: \"flex\" }}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {state.map((el, ind) => (\n            <Droppable key={ind} droppableId={`${ind}`}>\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                  {...provided.droppableProps}\n                >\n                  {el.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-around\"\n                            }}\n                          >\n                            {item.content}\n                            <button\n                              type=\"button\"\n                              onClick={() => {\n                                const newState = [...state];\n                                newState[ind].splice(index, 1);\n                                setState(\n                                  newState.filter(group => group.length)\n                                );\n                              }}\n                            >\n                              delete\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n    </div>\n  );\n}\nexport default QuoteApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}